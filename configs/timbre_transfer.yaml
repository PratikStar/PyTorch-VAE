show_logs: True
log_level: 6

wandb:
  entity: "auditory-grounding"
  project: "try"

data_params:
  dataset_path: '../../data/timbre'
  batch_size: 32 # set this number twice as actual batch size
  num_workers: 0

  spectrogram:
    type: "stft" # "stft" or "mel"
    stft:
      params: [512, 64] # [framesize, hop_length]
      load_duration: 1 # in sec
    mel:
      frame_size: 1024
      hop_length: 256
      spectrogram_dims: [80, 63] # (mel_channels, n_frames)
      segment_signal_length: 16000
  saver: # saves spectrogram as npy and min/max values. TODO: Untested
    enabled: False
    save_dir: "../out" # relative to dataset_path
  visualizer:
    enabled: False # Please enable for spectrogram inference
    save_dir: "../out" # relative to dataset_path
  csv: # Log generated datapoints in a csv
    enabled: True
    path: "../log" # relative to dataset_path


model_params:
  name: 'TimbreTransfer'
  timbre_encoder:
    # (C, H, W). dependant on data_params.spectrogram....
    spectrogram_dims: [1, "inferred from data params", "inferred from data params"]
    conv2d_channels: [128, 64, 32, 16]
    stride: [2, 2]
    kernel_size: [8, 8]
    padding: [3, 3]
    latent_dim: "inferred from framesize. framesize/2"
    # converge_latent: first, none, average
    converge_latent: "first"
  loss:
    # function: L1, L2
    function: "L1"
  merge_encoding: "sandwich" # z di_b z
  decoder:
    # (C, H, W). dependant on data_params.spectrogram....
    di_spectrogram_dims: [1, "inferred from data params", "inferred from data params"]
    conv2d_channels: [32, 8, 2, 1]
    stride: [1, 1]
    kernel_size: [5, 5]
    padding: [2, 2]
#  load_path: "/work/gk77/k77021/repos/TimbreSpace/logs/TimbreTransfer/version_4/checkpoints/last.ckpt"


exp_params:
  LR: 0.0001
  weight_decay: 0.0
  kld_weight: 0.000001
  manual_seed: 1265
  model_checkpoint: # Diecrtly passed to ModelCheckpoint()
    save_top_k: 10
    every_n_epochs: 30
    monitor: "val_loss"
    save_last: True



trainer_params: # This directly goes to trainer
  gpus: [0,1,2,3]
  max_epochs: 2000
  log_every_n_steps: 10


logging_params:
  save_dir: "logs/"
